<?php

//site_api_key_validator

//system-site-information-settings

/**
 * Implements hook_form_FORM_ID_alter()
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param string $form_id
 */
use Drupal\Core\Form\FormStateInterface;

function site_api_key_validator_form_system_site_information_settings_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  $config = \Drupal::config('site_api_key_validator.siteapikey');

  $form['siteapikey'] = array(
    '#type' => 'textfield',
    '#title' => t('Site API Key'),
    '#default_value' => empty( $config->get('siteapikey') ) ? t('No API Key yet') : $config->get('siteapikey'),
    '#size' => 60,
    '#maxlength' => 128,
    '#weight' => 0,
  );

  foreach (array_keys($form['actions']) as $action) {
    if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
      $form['actions'][$action]['#submit'][] = 'site_api_key_validator_custom_form_submit';
      if( !empty( $config->get('siteapikey') ) && $config->get('siteapikey') != 'No API Key yet' ) {
        $form['actions'][$action]['#value'] = t('Update Configuration');
      }
    }
  }
}

function site_api_key_validator_custom_form_submit(array $form, FormStateInterface $form_state){

    $config = \Drupal::service('config.factory')->getEditable('site_api_key_validator.siteapikey');

    $config->set('siteapikey', $form_state->getValue('siteapikey'))->save();

    if( 'No API Key yet' != $form_state->getValue('siteapikey') ) {
      drupal_set_message("Site API Key has been updated with " . $form_state->getValue('siteapikey'));
    }

}